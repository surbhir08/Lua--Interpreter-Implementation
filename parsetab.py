
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "leftPLUSMINUSleftTIMESDIVIDErightUMINUSDIVIDE DO ELSE END EQUAL FOR FUNCTION GREATER GREATEREQUAL ID IF LESS LESSEQUAL MINUS NOTEQUAL NUMBER PLUS PRINT RETURN THEN TIMES WHILE\n    chunk :  command_list\n\n    command_list : command command_list\n              | empty\n\n    command    : ID '=' exp\n               | FUNCTION ID '(' explist ')' command_list END\n               | FUNCTION ID expassign\n               | ID '(' actual_arg_exp ')'\n               | WHILE '(' exp ')' command\n               | IF '(' exp ')' THEN command_list ELSE command_list END\n               | RETURN exp_list\n               | DO command_list END\n               | FOR command ',' exp command\n               | PRINT '(' exp ')'\n               | '{' command_list '}'\n          \n    \n    actual_arg_exp : actual_args\n                   | empty\n                   \n    actual_args : exp ',' actual_args\n                | exp\n    \n    expassign    : empty\n                 | '=' exp\n                 \n    explist    : lexp\n               | empty\n    \n    lexp    : ID\n            | ID ',' lexp \n    \n    exp_list : exp\n             | empty\n             \n    exp    : NUMBER\n           | ID\n           | exp PLUS exp\n           | exp MINUS exp\n           | exp TIMES exp\n           | exp DIVIDE exp\n           | exp LESSEQUAL exp\n           | exp GREATEREQUAL exp\n           | exp LESS exp\n           | exp GREATER exp\n           | exp EQUAL exp\n           | exp NOTEQUAL exp\n           | MINUS exp %prec UMINUS \n           | '(' exp ')' \n           | ID '(' actual_arg_exp ')'\n            \n    empty :"
    
_lr_action_items = {'ID':([0,3,6,9,10,11,13,15,16,17,18,19,20,21,22,23,24,25,26,29,31,36,37,38,39,42,43,44,45,46,47,48,49,50,51,52,53,55,56,58,59,60,65,66,68,69,70,71,72,73,74,75,76,77,79,80,81,83,84,85,86,87,88,92,93,95,],[5,5,17,24,5,5,5,24,24,-42,24,24,-10,-25,-26,-27,-28,24,24,24,-4,61,-6,-19,24,24,24,24,24,24,24,24,24,24,24,24,-39,-11,24,-14,-7,24,-20,5,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-40,5,-13,61,5,-8,5,-41,-12,-5,5,-9,]),'FUNCTION':([0,3,9,10,11,13,17,20,21,22,23,24,31,37,38,53,55,58,59,65,66,68,69,70,71,72,73,74,75,76,77,79,80,81,84,85,86,87,88,92,93,95,],[6,6,-42,6,6,6,-42,-10,-25,-26,-27,-28,-4,-6,-19,-39,-11,-14,-7,-20,6,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-40,6,-13,6,-8,6,-41,-12,-5,6,-9,]),'WHILE':([0,3,9,10,11,13,17,20,21,22,23,24,31,37,38,53,55,58,59,65,66,68,69,70,71,72,73,74,75,76,77,79,80,81,84,85,86,87,88,92,93,95,],[7,7,-42,7,7,7,-42,-10,-25,-26,-27,-28,-4,-6,-19,-39,-11,-14,-7,-20,7,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-40,7,-13,7,-8,7,-41,-12,-5,7,-9,]),'IF':([0,3,9,10,11,13,17,20,21,22,23,24,31,37,38,53,55,58,59,65,66,68,69,70,71,72,73,74,75,76,77,79,80,81,84,85,86,87,88,92,93,95,],[8,8,-42,8,8,8,-42,-10,-25,-26,-27,-28,-4,-6,-19,-39,-11,-14,-7,-20,8,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-40,8,-13,8,-8,8,-41,-12,-5,8,-9,]),'RETURN':([0,3,9,10,11,13,17,20,21,22,23,24,31,37,38,53,55,58,59,65,66,68,69,70,71,72,73,74,75,76,77,79,80,81,84,85,86,87,88,92,93,95,],[9,9,-42,9,9,9,-42,-10,-25,-26,-27,-28,-4,-6,-19,-39,-11,-14,-7,-20,9,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-40,9,-13,9,-8,9,-41,-12,-5,9,-9,]),'DO':([0,3,9,10,11,13,17,20,21,22,23,24,31,37,38,53,55,58,59,65,66,68,69,70,71,72,73,74,75,76,77,79,80,81,84,85,86,87,88,92,93,95,],[10,10,-42,10,10,10,-42,-10,-25,-26,-27,-28,-4,-6,-19,-39,-11,-14,-7,-20,10,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-40,10,-13,10,-8,10,-41,-12,-5,10,-9,]),'FOR':([0,3,9,10,11,13,17,20,21,22,23,24,31,37,38,53,55,58,59,65,66,68,69,70,71,72,73,74,75,76,77,79,80,81,84,85,86,87,88,92,93,95,],[11,11,-42,11,11,11,-42,-10,-25,-26,-27,-28,-4,-6,-19,-39,-11,-14,-7,-20,11,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-40,11,-13,11,-8,11,-41,-12,-5,11,-9,]),'PRINT':([0,3,9,10,11,13,17,20,21,22,23,24,31,37,38,53,55,58,59,65,66,68,69,70,71,72,73,74,75,76,77,79,80,81,84,85,86,87,88,92,93,95,],[12,12,-42,12,12,12,-42,-10,-25,-26,-27,-28,-4,-6,-19,-39,-11,-14,-7,-20,12,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-40,12,-13,12,-8,12,-41,-12,-5,12,-9,]),'{':([0,3,9,10,11,13,17,20,21,22,23,24,31,37,38,53,55,58,59,65,66,68,69,70,71,72,73,74,75,76,77,79,80,81,84,85,86,87,88,92,93,95,],[13,13,-42,13,13,13,-42,-10,-25,-26,-27,-28,-4,-6,-19,-39,-11,-14,-7,-20,13,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-40,13,-13,13,-8,13,-41,-12,-5,13,-9,]),'$end':([0,1,2,3,4,9,14,17,20,21,22,23,24,31,37,38,53,55,58,59,65,68,69,70,71,72,73,74,75,76,77,79,81,85,87,88,92,95,],[-42,0,-1,-42,-3,-42,-2,-42,-10,-25,-26,-27,-28,-4,-6,-19,-39,-11,-14,-7,-20,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-40,-13,-8,-41,-12,-5,-9,]),'END':([3,4,9,10,14,17,20,21,22,23,24,27,31,37,38,53,55,58,59,65,68,69,70,71,72,73,74,75,76,77,79,81,84,85,87,88,90,92,93,94,95,],[-42,-3,-42,-42,-2,-42,-10,-25,-26,-27,-28,55,-4,-6,-19,-39,-11,-14,-7,-20,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-40,-13,-42,-8,-41,-12,92,-5,-42,95,-9,]),'}':([3,4,9,13,14,17,20,21,22,23,24,30,31,37,38,53,55,58,59,65,68,69,70,71,72,73,74,75,76,77,79,81,85,87,88,92,95,],[-42,-3,-42,-42,-2,-42,-10,-25,-26,-27,-28,58,-4,-6,-19,-39,-11,-14,-7,-20,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-40,-13,-8,-41,-12,-5,-9,]),'ELSE':([3,4,9,14,17,20,21,22,23,24,31,37,38,53,55,58,59,65,68,69,70,71,72,73,74,75,76,77,79,81,85,86,87,88,91,92,95,],[-42,-3,-42,-2,-42,-10,-25,-26,-27,-28,-4,-6,-19,-39,-11,-14,-7,-20,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-40,-13,-8,-42,-41,-12,93,-5,-9,]),'=':([5,17,],[15,39,]),'(':([5,7,8,9,12,15,16,17,18,19,24,25,26,29,39,42,43,44,45,46,47,48,49,50,51,52,56,60,],[16,18,19,26,29,26,26,36,26,26,52,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'NUMBER':([9,15,16,18,19,25,26,29,39,42,43,44,45,46,47,48,49,50,51,52,56,60,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'MINUS':([9,15,16,18,19,21,23,24,25,26,29,31,35,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,60,65,68,69,70,71,72,73,74,75,76,77,79,80,87,],[25,25,25,25,25,43,-27,-28,25,25,25,43,43,25,43,43,25,25,25,25,25,25,25,25,25,25,25,-39,43,25,43,25,43,-29,-30,-31,-32,43,43,43,43,43,43,-40,43,-41,]),',':([9,17,20,21,22,23,24,28,31,35,37,38,53,55,58,59,61,65,68,69,70,71,72,73,74,75,76,77,79,81,85,87,88,92,95,],[-42,-42,-10,-25,-26,-27,-28,56,-4,60,-6,-19,-39,-11,-14,-7,83,-20,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-40,-13,-8,-41,-12,-5,-9,]),')':([16,23,24,32,33,34,35,36,40,41,52,53,54,57,61,62,63,64,68,69,70,71,72,73,74,75,76,77,78,79,82,87,89,],[-42,-27,-28,59,-15,-16,-18,-42,66,67,-42,-39,79,81,-23,84,-21,-22,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,87,-40,-17,-41,-24,]),'PLUS':([21,23,24,31,35,40,41,53,54,57,65,68,69,70,71,72,73,74,75,76,77,79,80,87,],[42,-27,-28,42,42,42,42,-39,42,42,42,-29,-30,-31,-32,42,42,42,42,42,42,-40,42,-41,]),'TIMES':([21,23,24,31,35,40,41,53,54,57,65,68,69,70,71,72,73,74,75,76,77,79,80,87,],[44,-27,-28,44,44,44,44,-39,44,44,44,44,44,-31,-32,44,44,44,44,44,44,-40,44,-41,]),'DIVIDE':([21,23,24,31,35,40,41,53,54,57,65,68,69,70,71,72,73,74,75,76,77,79,80,87,],[45,-27,-28,45,45,45,45,-39,45,45,45,45,45,-31,-32,45,45,45,45,45,45,-40,45,-41,]),'LESSEQUAL':([21,23,24,31,35,40,41,53,54,57,65,68,69,70,71,72,73,74,75,76,77,79,80,87,],[46,-27,-28,46,46,46,46,-39,46,46,46,-29,-30,-31,-32,46,46,46,46,46,46,-40,46,-41,]),'GREATEREQUAL':([21,23,24,31,35,40,41,53,54,57,65,68,69,70,71,72,73,74,75,76,77,79,80,87,],[47,-27,-28,47,47,47,47,-39,47,47,47,-29,-30,-31,-32,47,47,47,47,47,47,-40,47,-41,]),'LESS':([21,23,24,31,35,40,41,53,54,57,65,68,69,70,71,72,73,74,75,76,77,79,80,87,],[48,-27,-28,48,48,48,48,-39,48,48,48,-29,-30,-31,-32,48,48,48,48,48,48,-40,48,-41,]),'GREATER':([21,23,24,31,35,40,41,53,54,57,65,68,69,70,71,72,73,74,75,76,77,79,80,87,],[49,-27,-28,49,49,49,49,-39,49,49,49,-29,-30,-31,-32,49,49,49,49,49,49,-40,49,-41,]),'EQUAL':([21,23,24,31,35,40,41,53,54,57,65,68,69,70,71,72,73,74,75,76,77,79,80,87,],[50,-27,-28,50,50,50,50,-39,50,50,50,-29,-30,-31,-32,50,50,50,50,50,50,-40,50,-41,]),'NOTEQUAL':([21,23,24,31,35,40,41,53,54,57,65,68,69,70,71,72,73,74,75,76,77,79,80,87,],[51,-27,-28,51,51,51,51,-39,51,51,51,-29,-30,-31,-32,51,51,51,51,51,51,-40,51,-41,]),'THEN':([67,],[86,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'chunk':([0,],[1,]),'command_list':([0,3,10,13,84,86,93,],[2,14,27,30,90,91,94,]),'command':([0,3,10,11,13,66,80,84,86,93,],[3,3,3,28,3,85,88,3,3,3,]),'empty':([0,3,9,10,13,16,17,36,52,84,86,93,],[4,4,22,4,4,34,38,64,34,4,4,4,]),'exp_list':([9,],[20,]),'exp':([9,15,16,18,19,25,26,29,39,42,43,44,45,46,47,48,49,50,51,52,56,60,],[21,31,35,40,41,53,54,57,65,68,69,70,71,72,73,74,75,76,77,35,80,35,]),'actual_arg_exp':([16,52,],[32,78,]),'actual_args':([16,52,60,],[33,33,82,]),'expassign':([17,],[37,]),'explist':([36,],[62,]),'lexp':([36,83,],[63,89,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> chunk","S'",1,None,None,None),
  ('chunk -> command_list','chunk',1,'p_grammar','Lua_parser.py',12),
  ('command_list -> command command_list','command_list',2,'p_grammar','Lua_parser.py',14),
  ('command_list -> empty','command_list',1,'p_grammar','Lua_parser.py',15),
  ('command -> ID = exp','command',3,'p_grammar','Lua_parser.py',17),
  ('command -> FUNCTION ID ( explist ) command_list END','command',7,'p_grammar','Lua_parser.py',18),
  ('command -> FUNCTION ID expassign','command',3,'p_grammar','Lua_parser.py',19),
  ('command -> ID ( actual_arg_exp )','command',4,'p_grammar','Lua_parser.py',20),
  ('command -> WHILE ( exp ) command','command',5,'p_grammar','Lua_parser.py',21),
  ('command -> IF ( exp ) THEN command_list ELSE command_list END','command',9,'p_grammar','Lua_parser.py',22),
  ('command -> RETURN exp_list','command',2,'p_grammar','Lua_parser.py',23),
  ('command -> DO command_list END','command',3,'p_grammar','Lua_parser.py',24),
  ('command -> FOR command , exp command','command',5,'p_grammar','Lua_parser.py',25),
  ('command -> PRINT ( exp )','command',4,'p_grammar','Lua_parser.py',26),
  ('command -> { command_list }','command',3,'p_grammar','Lua_parser.py',27),
  ('actual_arg_exp -> actual_args','actual_arg_exp',1,'p_grammar','Lua_parser.py',30),
  ('actual_arg_exp -> empty','actual_arg_exp',1,'p_grammar','Lua_parser.py',31),
  ('actual_args -> exp , actual_args','actual_args',3,'p_grammar','Lua_parser.py',33),
  ('actual_args -> exp','actual_args',1,'p_grammar','Lua_parser.py',34),
  ('expassign -> empty','expassign',1,'p_grammar','Lua_parser.py',36),
  ('expassign -> = exp','expassign',2,'p_grammar','Lua_parser.py',37),
  ('explist -> lexp','explist',1,'p_grammar','Lua_parser.py',39),
  ('explist -> empty','explist',1,'p_grammar','Lua_parser.py',40),
  ('lexp -> ID','lexp',1,'p_grammar','Lua_parser.py',42),
  ('lexp -> ID , lexp','lexp',3,'p_grammar','Lua_parser.py',43),
  ('exp_list -> exp','exp_list',1,'p_grammar','Lua_parser.py',45),
  ('exp_list -> empty','exp_list',1,'p_grammar','Lua_parser.py',46),
  ('exp -> NUMBER','exp',1,'p_grammar','Lua_parser.py',48),
  ('exp -> ID','exp',1,'p_grammar','Lua_parser.py',49),
  ('exp -> exp PLUS exp','exp',3,'p_grammar','Lua_parser.py',50),
  ('exp -> exp MINUS exp','exp',3,'p_grammar','Lua_parser.py',51),
  ('exp -> exp TIMES exp','exp',3,'p_grammar','Lua_parser.py',52),
  ('exp -> exp DIVIDE exp','exp',3,'p_grammar','Lua_parser.py',53),
  ('exp -> exp LESSEQUAL exp','exp',3,'p_grammar','Lua_parser.py',54),
  ('exp -> exp GREATEREQUAL exp','exp',3,'p_grammar','Lua_parser.py',55),
  ('exp -> exp LESS exp','exp',3,'p_grammar','Lua_parser.py',56),
  ('exp -> exp GREATER exp','exp',3,'p_grammar','Lua_parser.py',57),
  ('exp -> exp EQUAL exp','exp',3,'p_grammar','Lua_parser.py',58),
  ('exp -> exp NOTEQUAL exp','exp',3,'p_grammar','Lua_parser.py',59),
  ('exp -> MINUS exp','exp',2,'p_grammar','Lua_parser.py',60),
  ('exp -> ( exp )','exp',3,'p_grammar','Lua_parser.py',61),
  ('exp -> ID ( actual_arg_exp )','exp',4,'p_grammar','Lua_parser.py',62),
  ('empty -> <empty>','empty',0,'p_empty','Lua_parser.py',68),
]
